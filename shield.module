<?php

/**
 * Implementation of hook_perm().
 */
function shield_perm() {
  return array('administer shield');
}

/**
 * Implementation of hook_menu().
 */
function shield_menu() {
  
  $items['admin/settings/shield'] = array(
    'title' => 'Shield settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shield_admin_settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
    'access arguments' => array('administer shield'),
  );

  return $items;
}

/**
 * Administration settings form
 */
function shield_admin_settings() {
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('Description'),
    '#value' => t('Set up credentials for an authenticated user. You can also decide whether you want to print out the credentials or not.'),
  );
  
  $form['shield_user'] = array(
    '#type' => 'textfield',
    '#title' => t("The authenticated user's name"),
    '#default_value' => variable_get('shield_user', ''),
  );

  $form['shield_pass'] = array(
    '#type' => 'textfield',
    '#title' => t("The authenticated user's password"),
    '#default_value' => variable_get('shield_pass', ''),
  );

  $form['shield_print'] = array(
    '#type' => 'textfield',
    '#title' => t("What to print in the authentication request popup. You can use [user] and [pass] to print the user and the password respectively. You can leave it empty, if you don't want to print out any special message to the users."),
    '#default_value' => variable_get('shield_print', 'Hello, user: [user], pass: [pass]!'),
  );

  return system_settings_form($form);
}

/**
 * Implementation of hook_boot().
 */
function shield_boot() {
  $user = variable_get('shield_user', '');
  if (!$user) {
    return;
  }
  $pass = variable_get('shield_pass', '');

  if (!empty($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW']) 
      && $_SERVER['PHP_AUTH_USER'] == $user 
      && $_SERVER['PHP_AUTH_PW']   == $pass) {
    return;
  }
  
  $print = variable_get('shield_print', 'Hello, user: [user], pass: [pass]!');
  header(sprintf('WWW-Authenticate: Basic realm="%s"', strtr($print, array('[user]' => $user, '[pass]' => $pass)));
  header('HTTP/1.0 401 Unauthorized');
  exit;
}
